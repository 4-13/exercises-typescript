---

name: Аннотации типов
theory: |

  В простых случаях тип массива определяется как название типа и квадратные скобки после него: `string[]`, `number[]`, и так далее. Эта схема работает и алиасами типов:

  ```typescript
  type User = {
    name: string
  };

  // При определении констант и переменных
  const users: User[] = [];

  // В определении функций
  function foo(users: User[]) {
    // ...
  }
  ```

  Но что делать, в случае составных типов, например если мы хотим использовать объединение или описание объекта? В этом случае используется другой синтаксис: `Array<>`. Описание типа, в такой записи происходит между знаками меньше и больше:

  ```typescript
  const users: Array<{ name: string }> = [];
  const users: Array<string | null> = [];
  ```

  Этот синтаксис может использоваться и для ситуаций, где подходит запись с квадратными скобками:

  ```typescript
  const users: Array<string> = [];
  const users: Array<number> = [];
  const users: Array<User> = [];
  ```

  Но обычно так не делают, там где можно использовать более короткий вариант - используют его.

instructions: |

# tips:
