---

name: Кортежи (Tuples)
theory: |

  Обычно массивы могут менять свой размер и содержать ноль или более значений. Но иногда массивы выпуступают в качестве упрощенной версии объекта, где количество значений и их порядок строго определен. Например с помощью такого массива можно представить точку на плоскости: `[x, y]`.

  В TypeScript подобные массивы называются кортежами и у них есть свой собственный синтаксис определения. Представление точки:

  ```typescript
  const point: [number, number] = [1, 3]
  // Можно поменять
  const point[0] = 4;

  // Нельзя создать не совпадающий по типу
  const point2: [number, number] = [1, 3, 8]; // Boom!
  ```

  Было бы логично, если бы такое же поведение применялось и к `push()` или `pop()`. Ведь если мы определили кортеж из двух элементов, то элементов должно быть именно два. На практике, код ниже сработает:

  ```typescript
  point.push(10);
  console.log(point); // [4, 3, 10];
  ```

  Почему? По идее такого быть не должно, но [исторически так сложилось](https://stackoverflow.com/questions/64069552/typescript-array-push-method-cant-catch-a-tuple-type-of-the-array). Сейчас уже поздно, слишком много кода завязано на текущее поведение и его нельзя поменять в самом TypeScript без нарушения обратной совместимости. Общая рекомендация состоит в том, чтобы не пытаться изменять размер кортежа.

  Кортежи могут состоять из элементов разных типов:

  ```typescript
  const HTTPResponse = [number, string];

  // Порядок определения важен
  const result: HTTPResponse = [404, 'Page is not found'];
  // Так не сработает ['Page is not found', 404]
  ```



instructions: |

# tips:
